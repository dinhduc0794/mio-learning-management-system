@model IEnumerable<Mio.LMS.Web.Models.ViewModels.CourseViewModel>
@{
    ViewData["Title"] = "Danh s√°ch kh√≥a h·ªçc";
}

<div class="main-content">
    <div class="main-content-inner">
        <div class="breadcrumbs" id="breadcrumbs">
            <ul class="breadcrumb">
                <li>
                    <i class="ace-icon fa fa-home home-icon"></i>
                    <a asp-controller="Home" asp-action="Index">Trang ch·ªß</a>
                </li>
                <li class="active">Danh s√°ch kh√≥a h·ªçc</li>
            </ul>
        </div>

        <div class="page-content">
            <div class="page-header">
                <h1 style="font-weight: bold;">Danh s√°ch kh√≥a h·ªçc</h1>
            </div>

            <div class="row">
                <div class="col-xs-12">
                    <div class="filter-container" style="margin-bottom: 20px;">
                        <label for="categoryFilter">L·ªçc theo danh m·ª•c:</label>
                        <select id="categoryFilter" class="form-control" style="display:inline-block; width:auto;">
                            <option value="" selected="@(ViewBag.SelectedCategoryId == null ? "selected" : null)">T·∫•t c·∫£</option>
                            @foreach (var category in ViewBag.AllCategories)
                            {
                                <option value="@category.Value"
                                        selected="@(ViewBag.SelectedCategoryId != null && ViewBag.SelectedCategoryId.ToString() == category.Value ? "selected" : null)">
                                    @category.Text
                                </option>
                            }
                        </select>
                    </div>
                    <div class="add-course-container text-end" style="margin-bottom: 20px;">
                        <a asp-action="Create">
                            <button class="btn btn-primary" title="Th√™m kh√≥a h·ªçc">
                                <i class="ace-icon fa fa-plus bigger-130"></i> Th√™m kh√≥a h·ªçc
                            </button>
                        </a>
                    </div>
                </div>
            </div>

            @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
            {
                <div class="alert alert-danger">
                    @ViewBag.ErrorMessage
                </div>
            }

            <div class="table-responsive">
                <table id="courseList" class="table table-striped table-bordered table-hover">
                    <thead>
                    <tr>
                        <th class="text-center">T√™n kh√≥a h·ªçc</th>
                        <th class="text-center">M√¥ t·∫£</th>
                        <th class="text-center">Danh m·ª•c</th>
                        <th class="text-center">Ng√†y t·∫°o</th>
                        <th class="text-center">Ng√†y s·ª≠a</th>
                        <th class="text-center">Thao t√°c</th>
                    </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var tblCourse = $("#courseList").DataTable({
                "destroy": true,
                "serverSide": false,
                "processing": false,
                "language": {
                    "emptyTable": "Kh√¥ng c√≥ d·ªØ li·ªáu",
                    "info": "Hi·ªÉn th·ªã _START_ ƒë·∫øn _END_ c·ªßa _TOTAL_ b·∫£n ghi",
                    "infoEmpty": "Hi·ªÉn th·ªã 0 ƒë·∫øn 0 c·ªßa 0 b·∫£n ghi",
                    "processing": "ƒêang t·∫£i d·ªØ li·ªáu...",
                    "paginate": {
                        "first": "ƒê·∫ßu",
                        "last": "Cu·ªëi",
                        "next": "Ti·∫øp",
                        "previous": "Tr∆∞·ªõc"
                    }
                },
                "autoWidth": true,
                "responsive": true,
                "ordering": false,
                "pageLength": 10,
                "lengthChange": false,
                "searching": false,
                ajax: {
                    url: '@Url.Action("GetAllCourses", "Course")',
                    method: 'GET',
                    data: function (d) {
                        var categoryId = $("#categoryFilter").val();
                        // üëâ N·∫øu kh√¥ng ch·ªçn th√¨ xo√° kh·ªèi request
                        if (categoryId) {
                            d.categoryId = parseInt(categoryId);
                        } else {
                            delete d.categoryId;
                        }
                    },
                    dataSrc: function (json) {
                        console.log("AJAX response:", json);
                        return json.data || [];
                    },
                    error: function (xhr, error, thrown) {
                        console.log("AJAX error:", xhr, error, thrown);
                        toastr.error("L·ªói khi t·∫£i d·ªØ li·ªáu: " + (xhr.responseJSON?.message || "L·ªói kh√¥ng x√°c ƒë·ªãnh"));
                    }
                },
                columns: [
                    {
                        data: "courseName",
                        render: function (data) {
                            return data || "N/A";
                        },
                        className: "text-center"
                    },
                    {
                        data: "description",
                        render: function (data) {
                            return data || "N/A";
                        },
                        className: "text-center"
                    },
                    {
                        data: "categoryName", // S·ª≠a t·ª´ "category" th√†nh "categoryName"
                        render: function (data) {
                            return data || "N/A";
                        },
                        className: "text-center"
                    },
                    {
                        data: "createdAt",
                        render: function (data) {
                            return data ? moment.tz(data, "Asia/Ho_Chi_Minh").format("DD/MM/YYYY HH:mm") : "N/A";
                        },
                        className: "text-center"
                    },
                    {
                        "data": "updatedAt",
                        render: function (data) {
                            return data ? moment.tz(data, "Asia/Ho_Chi_Minh").format("DD/MM/YYYY HH:mm") : "N/A";
                        },
                        "className": "center"
                    },
                    {
                        data: "courseId",
                        render: function (data) {
                            return `
                                <a href="/Course/Edit/${data}" title="S·ª≠a kh√≥a h·ªçc">
                                    <i class="fas fa-pen-square text-primary" style="font-size:1.4em;"></i>
                                </a>
                                <a href="#" onclick="deleteCourse(${data})" title="X√≥a kh√≥a h·ªçc">
                                    <i class="fas fa-trash-alt text-danger mx-2" style="font-size:1.4em;"></i>
                                </a>`;
                        },
                        className: "text-center"
                    }
                ]
            });

            $("#categoryFilter").change(function () {
                tblCourse.ajax.reload();
            });

            window.deleteCourse = function (id) {
                if (confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a kh√≥a h·ªçc n√†y?")) {
                    $.ajax({
                        url: '@Url.Action("Delete", "Course")',
                        type: "POST",
                        data: { id: id },
                        headers: {
                            "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (response) {
                            if (response.success) {
                                toastr.success("X√≥a th√†nh c√¥ng!");
                                tblCourse.ajax.reload(); 
                            } else {
                                toastr.error("X√≥a th·∫•t b·∫°i: " + response.message);
                            }
                        },
                        error: function (xhr) {
                            toastr.error("ƒê√£ c√≥ l·ªói x·∫£y ra: " + (xhr.responseJSON?.message || "L·ªói kh√¥ng x√°c ƒë·ªãnh"));
                        }
                    });
                }
            };
        });
    </script>
}